variables:
  MONO_VERSION: 6_4_0
  NETCORE_VERSION: '8.0.x'

# set the version numbering, this results in 1.0.1 for the first build incrementing that way.
name: 4.0$(rev:.r)

# Defines that a commit to the master branch should trigger this build
# trigger:
# - master

# Defines that PRs against this branch should also trigger this build
# pr:
# - master

# the machine and prerequisites to run this build on
pool:
  vmImage: macos-13

# The different steps in our build
steps:

- task: CmdLine@2
  inputs:
    script: |
      dotnet nuget locals all --clear 
      dotnet workload install maui 
      dotnet workload install android ios maui
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.sln'
    feedsToUse: 'select'

# - task: UseDotNet@2
#   displayName: 'Use .Net Core sdk'
#   inputs:
#      version: $(NETCORE_VERSION)
#      includePreviewVersions: false

# build and pack a beta version of the NuGet package. Versioning is done through the name tag in this definition.
# - task: MSBuild@1
#   displayName: 'Build & Pack beta build'
#   inputs:
#     solution: 'src/Plugin.PushNotification/Plugin.PushNotification.csproj'
#     configuration: 'Release'
#     msbuildArguments: '/restore /t:Build /p:ContinuousIntegrationBuild=true /p:Deterministic=false /t:Pack /p:PackageVersion=$(Build.BuildNumber)-beta /p:PackageOutputPath=$(build.artifactstagingdirectory)/beta /p:AssemblyFileVersion=$(Build.BuildNumber)'
#     clean: true

# build and pack a final version of the NuGet package. Versioning is done through the name tag in this definition.

- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    packagesToPack: 'src/Plugin.PushNotification/Plugin.PushNotification.csproj'
    versioningScheme: 'off'
    buildProperties: 'ContinuousIntegrationBuild=true /p:Deterministic=false -t:Pack /p:PackageVersion=$(Build.BuildNumber) /p:PackageOutputPath=$(build.artifactstagingdirectory)/final /p:AssemblyFileVersion=$(Build.BuildNumber) /p:--no-restore'
    
# copy all the nupkg files created to the artifact directory
- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(build.sourcesdirectory)'
    Contents: '**\*.nupkg'
    TargetFolder: '$(build.artifactstagingdirectory)'

# publish the artifacts as results of the build
# - task: PublishBuildArtifacts@1
#   displayName: 'Publish Artifact: drop'